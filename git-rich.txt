{aaTerminator MASTER CODE rev  3/18/15 @ 10.30  $631,157  1.1.07 to 3.18.15}
{Matt's Version: rev 3/19/15 @ 9:05 $643,028 1.1.07 to 3.18.15}

{Holidays     TEST STARTING AT 7:30 ON HOLIDAYS
New Year’s Day                    January 1                         closed
Marin Luther King Day             3rd Monday in January             10:30
President’s Day                   3rd Monday in February            10:30
Memorial Day                      Last Monday in May                noon
Independence Day                  July 4th                          noon
Labor Day                         1st Monday in September           noon
Columbus Day                      2nd Monday in October             full day
Veterans Day                      November 11th                     full day
Thanksgiving Day                  4th Thursday in November          noon
Christmas Day                     December 25th                     closed      

FOMC;    http://www.federalreserve.gov/monetarypolicy/fomccalendars.htm.  On FOMC Statement days stop entering trades at noon, then out of everything at 12:45.  Generally good trading the next day unless there's a wedge on the LT, see 1.30.15 screen shot.
Non Farm Payroll;     The Bureau of Labor Statistics releases preliminary data on the third Friday after the conclusion of the reference week, i.e., the week which includes the 12th of the month, at 8:30 a.m. Eastern Time;[5] typically this date occurs on the first Friday of the month. Nonfarm payroll is included in the monthly Employment Situation or informally the jobs report and affects the US dollar, the Foreign exchange market, the bond market, and the stock market
Contract Roller;   load dates from this site:   http://www.cmegroup.com/trading/equity-index/us-index/e-mini-sandp500_product_calendar_futures.html roll over alert on the weekend and expect choppy trading prior}


Inputs:
L.S10.below.GBH (1),
L.S10.below.T1 (1),
L.S10.below.T2 (1),
L.S10.above.T2 (1),
L.Scalp (1),
L.BL (1),
L.Z_GBH (1),
L.Z_BL (1),
L.ERC.below.GBH (1),

S.Scalp (1),
S.BL (1),
S.Z_BL (1),
S.Z_GBL (1),
S.S10.below.GBL (1),
S.S10.above.T1 (1),
S.S10.above.T2 (1),
S.S10.below.T2 (1),
S.ERC.above.GBH (1),
S.ERC.below.GBH (1),
S.ERC.below.BL (1),
S.ERC.below.T2 (1)
;

Inputs:
PriceH( High),
PriceL( Low),
PriceC( Close),
StochLength( 5),
SmoothingLength1( 2),
SmoothingLength2( 3),
SmoothingType( 1),
OverSold( 20),
OverBought( 80) ;
variables:
oFastK( 0 ),
oFastD( 0 ),
oSlowK( 0 ),
oSlowD( 0 ) ;
Value1 = Stochastic( PriceH, PriceL, PriceC, StochLength, SmoothingLength1,
SmoothingLength2, SmoothingType, oFastK, oFastD, oSlowK, oSlowD ) ;
{----------END STOCHASTICS----------}

{----------BEGIN MACD----------}
Variables:
int FastLength( 3 ),
int SlowLength( 4 ),
int MACDLength( 2 );
variables:
intrabarpersist bool PlotCrossBarsAgo( false ),
double MyMACD( 0 ),
double MACDAvg( 0 ),
double MACDDiff( 0 ),
double HistogramColor( 0 ),
int CrossBarsAgo( 0 ) ;
once
PlotCrossBarsAgo = GetAppInfo( aiApplicationType ) <> cChart ;
MyMACD = MACD( Close, FastLength, SlowLength ) ;
MACDAvg = XAverage( MyMACD, MACDLength ) ;
MACDDiff = MyMACD - MACDAvg ;
if ( MACDDiff > 0 and MACDDiff[1] <= 0 ) or ( MACDDiff < 0 and MACDDiff[1] >= 0 )
then
CrossBarsAgo = 0
else
CrossBarsAgo += 1 ;

Variables:
int FastLength_30( 14 ),
int SlowLength_30( 20 ),
int MACDLength_30( 8 );
variables:
intrabarpersist bool PlotCrossBarsAgo_30( false ),
double MyMACD_30( 0 ),
double MACDAvg_30( 0 ),
double MACDDiff_30( 0 ),
double HistogramColor_30( 0 ),
int CrossBarsAgo_30( 0 ) ;
once
PlotCrossBarsAgo = GetAppInfo( aiApplicationType ) <> cChart ;
MyMACD_30 = MACD( Close, FastLength_30, SlowLength_30 ) ;
MACDAvg_30 = XAverage( MyMACD_30, MACDLength_30 ) ;
MACDDiff_30 = MyMACD_30 - MACDAvg_30 ;
if ( MACDDiff_30 > 0 and MACDDiff_30[1] <= 0 ) or ( MACDDiff_30 < 0 and MACDDiff_30[1] >= 0 )
then
CrossBarsAgo = 0
else
CrossBarsAgo += 1 ;
{----------END MACD----------}

{----------BEGIN FLOOR TRADER PIVOT POINTS----------}
inputs:
int UseSessionOrDateChange_0_or_1( 0 ),
int Plot_5or7( 5 ) ;
variables:
int CurrSess( 0 ),
bool CalcTrigger( false ),
double S1( 0 ),
double S2( 0 ),
double S3( 0 ),
double R1( 0 ),
double R2( 0 ),
double R3( 0 ),
double PP( 0 ),
double TodaysHigh( 0 ),
double YestHigh( 0 ),
double TodaysLow( 0 ),
double YestLow( 0 ),
double TodaysClose( 0 ),
double YestClose( 0 ),
int Counter( 0 ) ;
CurrSess = CurrentSession( 0 ) ;
if UseSessionOrDateChange_0_or_1 = 0 then
CalcTrigger = CurrSess <> CurrSess[1]
else
CalcTrigger = Date <> Date[1] ;
if CalcTrigger then
begin
{ increment Counter to be sure enough data is processed - see comment below }
if CurrentBar > 1 then
Counter = Counter + 1 ;
YestHigh = TodaysHigh ;
YestLow = TodaysLow ;
YestClose = Close[1] ;
TodaysHigh = High ;
TodaysLow = Low ;
PP = ( YestHigh + YestLow + YestClose ) / 3 ;
R1 = Round2Fraction(PP * 2 - YestLow) ;
R2 = Round2Fraction(PP + YestHigh - YestLow) ;
R3 = Round2Fraction(R2 + YestHigh - YestLow) ;
S1 = Round2Fraction(PP * 2 - YestHigh) ;
S2 = Round2Fraction(PP - YestHigh + YestLow) ;
S3 = Round2Fraction(S2 - YestHigh + YestLow) ;
PP = Round2Fraction( (YestHigh + YestLow + YestClose ) / 3) ;
end
else
begin
if High > TodaysHigh then
TodaysHigh = High ;
if Low < TodaysLow then
TodaysLow = Low ;
end ;
{----------END FLOOR TRADER PIVOT POINTS----------}

{----------BEGIN JOHN EMINI LINES----------}
Variables:
ChartTimeFrame (1);
Variables:
GlobexOpen (100),
GlobexClose (809),
MarketClose (1600),
GlobexHigh (0),
GlobexLow (0),
GlobexRange (0),
RangeSet (0),
S10 (0),
S19 (0),
S10_30(0),
S19_30 (0),
Bounceline (0),
UpsideTarget1 (0),
UpsideTarget2 (0),
DownsideTarget1 (0),
DownsideTarget2 (0),
Trend (0);
If Barinterval = 5 then S10 = Average (Close,10);
If Barinterval = 2 then s10 = Average (Close,25);
If Barinterval = 5 then S19 = Average (Close,19);
If Barinterval = 2 then s19 = Average (Close,48);
S10_30 = Average (Close,10*6);
S19_30 = Average (Close,19*6);
If Time = GlobexOpen then begin
GlobexHigh=high;
GlobexLow=low;
end;


If Date > Date[1] then begin
GlobexHigh = 0;
GlobexLow = 0;
end;

If Time >= GlobexOpen + ChartTimeFrame and (GlobexHigh=0 or GlobexLow=0) then begin
GlobexHigh=High;
GlobexLow=Low;
end;

If time > GlobexOpen and time <= GlobexClose then begin
If High > GlobexHigh then GlobexHigh = High;
If Low < GlobexLow then GlobexLow = Low;
GlobexRange = GlobexHigh - GlobexLow;
Bounceline = Round2Fraction(GlobexRange/2 + GlobexLow);
UpsideTarget1 = Round2Fraction(GlobexLow + GlobexRange*1.34);
UpsideTarget2 = Round2Fraction(GlobexLow + GlobexRange*1.618);
DownsideTarget1 = Round2Fraction(GlobexHigh - GlobexRange*1.34);
DownsideTarget2 = Round2Fraction(GlobexHigh - GlobexRange*1.618);
End;

If time >= GlobexOpen and time <= MarketClose then
RangeSet = 1
Else Begin
RangeSet = 0;
End;

{----------END JOHN EMINI LINES----------}

{------------------------END INDICATOR-----------------------------}

















{------------------------------------------------------------------}

{-------------------------BEGIN STRATEGY-------------------------------}




Variables:
S10_30Opt (.003);

Variables:
T_hitBarsBack (10),
T_hitT1range (0),
T_hitT2range (.75),
T_hitGBHrange (.25);

Variables:
WinCounterLimit (10),
LossCounterLimit (5);

Variables:
S10downSlope (.3),
S19downSlope (0);

Variables:
S10upSlope (0.31),
PullbackHeight (2),
S10Range (.75),
S10Flat (0);

Variables:
ShortS10Projection (0),
LongS10Projection (0);{used for exits on entry candle}

Variables:
S10atEntry(0),
LossCounter (0),
WinCounter (0),
NumLoss (0),
NumWin(0);

NumLoss= NumLosTrades;
NumWin= NumWinTrades;

If NumLoss > NumLoss[1] then LossCounter = LossCounter + 1;
If NumWin > NumWin[1] then WinCounter = WinCounter + 1;

If Time < 800 then LossCounter = 0;
If Time < 800 then WinCounter = 0;

{SESSION HIGH & LOW}
Variables:
SessionHigh (0),
SessionLow (0),
SessionRange (0),
SessionRangeLimit(7);

If Time = 0 then begin
SessionHigh =High;
SessionLow =Low;
End;

If High > SessionHigh then SessionHigh = High;
If Low < SessionLow then SessionLow = Low;
SessionRange = SessionHigh - SessionLow;

Variables:
InPositionBarCount (0);

{IN POSITION BAR COUNTER}
If Marketposition = 0 then
InPositionBarCount = 0;

If Marketposition <>0 then
InPositionBarCount = InPositionBarCount + 1;

Variables:
S10Entry.a (0),
S10Entry.b (0),
S10Entry.c (0),
S10Entry.d (0),
S10Entry.e (0),
S10Entry.f (0),
S10Entry.g (0),
S10Entry.h (0),
ERCEntry.a (0),
ERCEntry.b (0),
ERCEntry.c (0),
ERCEntry.d (0),
ERCEntry.e (0),
ERCEntry.f (0),
ERCEntry.g (0),
ERCEntry.h (0),
ERCEntry.i (0),
ERCEntry.x (0),
ERCEntry.z (0)
;

If Marketposition = 0 then begin
S10Entry.a = 0;
S10Entry.b = 0;
S10Entry.c = 0;
S10Entry.d = 0;
S10Entry.e = 0;
S10Entry.f = 0;
S10Entry.g = 0;
S10Entry.h = 0;

ERCentry.a = 0;
ERCentry.b = 0;
ERCentry.c = 0;
ERCentry.d = 0;
ERCentry.e = 0;
ERCentry.f = 0;
ERCentry.g = 0;
ERCentry.h = 0;
ERCentry.i = 0;
ERCentry.x = 0;
ERCentry.z = 0;
End;

Variables:
LtOpen (0);
If Time = 800
Or Time = 830
Or Time = 900
Or Time = 930
Or Time = 1000
Or Time = 1030
Or Time = 1100
Or Time = 1130
Or Time = 1200
Or Time = 1230
Or Time = 1300
Or Time = 1330
Or Time = 1400
Or Time = 1430
Or Time = 1500
Then LTOpen = Open;

Variables:
PredictedS10 (0),
S10TrendCount (0);

If S10 > S10[1]
Then PredictedS10 = S10 + (S10 -S10[1]);

If S10 < S10[1]
Then PredictedS10 = S10 - (S10[1] -S10);

If S10 > S10[1]
And S10TrendCount < 0
Then S10TrendCount = 0;

If S10 < S10[1]
And S10TrendCount > 0
Then S10TrendCount = 0;

If S10 > S10[1]
Then S10TrendCount = S10TrendCount + 1;

If S10 < S10[1]
Then S10TrendCount = S10TrendCount - 1;



{----------BEGIN CALCULATE 10 DAY MA ARRAY----------}
Array:  Ten_Day_MA[] (0);
Array_SetMaxIndex(Ten_Day_MA, 11) ;

variables:
Count_10dma (0),
Count_loop_10dma (0)
;

//Populate Array for first 10 days
If Time = SessionEndTime (0,1)
And Count_10dma < 10
then
Begin
    Count_10dma = Count_10dma +1;
	Ten_Day_MA[Count_10dma] = Open;
End;

//Update Array each day after first 10 days
If Time = SessionEndTime (0,1)
And Count_10dma[1] = 10 
then Begin
	Count_loop_10dma = 0;
	While Count_loop_10dma < 10 
	begin
		Count_loop_10dma = Count_loop_10dma +1;
		Ten_Day_MA[Count_loop_10dma] = Ten_Day_MA[Count_loop_10dma + 1];
	End;
	Ten_Day_MA[10] = Open;	
End;


Variables:
Ten_Day_MA_SUM (0),
Ten_Day_MA_AVG (0),
Ten_Day_MA_angle (0),
Ten_Day_MA_ready (0)
;

If Count_10dma = 10 then begin
Ten_Day_MA_ready = 1;
Ten_Day_MA_SUM = Array_Sum(Ten_Day_MA, Count_10dma - 9, Count_10dma);
Ten_Day_MA_AVG = Ten_Day_MA_SUM/10;
Ten_Day_MA_angle = Ten_Day_MA_AVG - Ten_Day_MA_AVG[1];
end;


{---------- END  CALCULATE 10 DAY MA ARRAY----------}


{----------BEGIN CALCULATE 50 DAY MA ARRAY----------}
Array:  Fifty_Day_MA[] (0);
Array_SetMaxIndex(Fifty_Day_MA, 51) ;

variables:
Count_50dma (0),
Count_loop_50dma (0)
;

//Populate Array for first 50 days
If Time = SessionEndTime (0,1)
And Count_50dma < 50
then
Begin
    Count_50dma = Count_50dma +1;
	Fifty_Day_MA[Count_50dma] = Open;
End;

//Update Array each day after first 50 days
If Time = SessionEndTime (0,1)
And Count_50dma[1] = 50 
then Begin
	Count_loop_50dma = 0;
	While Count_loop_50dma < 50 
	begin
		Count_loop_50dma = Count_loop_50dma +1;
		Fifty_Day_MA[Count_loop_50dma] = Fifty_Day_MA[Count_loop_50dma + 1];
	End;
	Fifty_Day_MA[50] = Open;	
End;


Variables:
Fifty_Day_MA_SUM (0),
Fifty_Day_MA_AVG (0),
Fifty_Day_MA_angle (0),
Fifty_Day_MA_ready (0)
;

If Count_50dma = 50 then begin
Fifty_Day_MA_ready = 1;
Fifty_Day_MA_SUM = Array_Sum(Fifty_Day_MA, Count_50dma - 49, Count_50dma);
Fifty_Day_MA_AVG = Fifty_Day_MA_SUM/50;
Fifty_Day_MA_angle = Fifty_Day_MA_AVG - Fifty_Day_MA_AVG[1];
end;


{---------- END  CALCULATE 50 DAY MA ARRAY----------}



















{===============LONG S10 ENTRIES below Globex High, (S10<GBH) Master===============}
If L.S10.below.GBH = 1
And Marketposition = 0
And Time >= 825 
And Time < 1445                                            
And GlobexHigh - Bounceline > 3
And (Highest (high,5) - Low < 3.5 or S10> S10[1]+.55)
And Highest (high,5) - Low > 1
And Low[1] >= S10 [1]
And low[2] >= S10 [2]
And S10TrendCount >0 
And AbsValue((Highest (high,10)- GlobexHigh)) > 0.5
And AbsValue((Highest (high,10)- PP)) > 0
And PredictedS10 + S10Range < GlobexHigh - 1
And PredictedS10 > DownsideTarget1

And LTopen > S10_30 - 4                                   
And AbsValue (PP - Close) > .5                             
And Highest (Close, 21) - Lowest (Close, 9) > 2.75      

//And Highest(MyMACD,4) < 1.1       {new code 3.20 no help}                                 
//And AbsValue (PP - Close) > .5 
{And Highest(MyMACD, 4) - Highest(MyMACD, 1) > - .6    couldn't hand optimize this, run thru the optimizer }                            
   
And 
	((Fifty_Day_MA_ready = 1 and Close > Fifty_Day_MA_AVG - 44)
	Or
	Fifty_Day_MA_ready = 0)
 
Then begin
Buy ("(L)S10<GBH") 4 contracts next bar at PredictedS10 + S10Range limit;
S10Entry.a= PredictedS10 + S10Range;
End;

{scale out}
Sell ("+S10.GH.a") From Entry ("(L)S10<GBH") 1 contracts Next Bar at GlobexHigh - .5 limit;
Sell ("+S10.T1.a") From Entry ("(L)S10<GBH") 1 contracts Next Bar at UpsideTarget1 - .5 limit;                           
Sell ("+S10.T2.a") From Entry ("(L)S10<GBH") 1 contracts Next Bar at UpsideTarget2 - .5 limit;

Sell ("+S10.10pointer") From Entry ("(L)S10<GBH") all contracts Next Bar at S10Entry.a + 10 limit; 

If R1 > GlobexHigh + 1.5 then Sell ("+S10.R1.a") From Entry ("(L)S10<GBH") 1 contracts Next Bar at R1 - .5 limit;                
If R2 > UpsideTarget1 + 1.5 then Sell ("+S10.R2.a") From Entry ("(L)S10<GBH") 1 contracts Next Bar at R2 - .75 limit;
If R3 > UpsideTarget2 + 1.5 then Sell ("+S10.R3.a") From Entry ("(L)S10<GBH") 1 contracts Next Bar at R3 - .75 limit;

{Globex Low}
If S10Entry.a > GlobexLow + 1
And S10Entry.a - Close < 2
then
Sell ("+S10.GBL.stop") From Entry ("(L)S10<GBH") all contracts Next Bar at GlobexLow - .25 stop;                                    
//If (High - Close) > +7 Then Sell ("+S10.OShit!") From Entry ("(L)S10<GBH") all contracts Next Bar at Market;                                        

{S10 PreHook}
If High < S10 
and (Close < Open - .5 or time > 1445 or High - Close > 1.75)
then sell ("+S10 pre-hook.a") from Entry ("(L)S10<GBH") all contracts next bar at PredictedS10 limit;

{get safe} 
If Currentcontracts <> 0
Then Begin
	If Currentcontracts < 4
	And GlobexHigh - Entryprice > 2.25 
	then Sell ("+S10.SafeStop.a") From Entry ("(L)S10<GBH") all contracts next bar at EntryPrice -.75 stop;                                         
	
	If Currentcontracts < 4
	And GlobexHigh - Entryprice <= 2.25 
	then Sell ("+S10.SafeStop.b") From Entry ("(L)S10<GBH") all contracts next bar at EntryPrice - (GlobexHigh -.5 - EntryPrice) +.25 stop; 
	         
	
	If Currentcontracts < 3
	And Close[1]> open[1] 
	And Close < Low[1]
	And Close < S19 
	then Sell ("+S10.SafeStop.c") From Entry ("(L)S10<GBH") all contracts next bar at S19- 1 stop;
	
	{ **************NOTE: attempts to put in this < 4 code reduces profits, not sure why.  If Currentcontracts < 4             
	then Sell ("+S10.SafeStop.d") From Entry ("(L)S10<GBH") all contracts next bar at GlobexHigh - 6 stop; }  
	
	If Currentcontracts < 3
	then Sell ("+S10.SafeStop.e") From Entry ("(L)S10<GBH") all contracts next bar at GlobexHigh - 2.5 stop;                      
	
	If Currentcontracts < 2
	then Sell ("+S10.SafeStop.f") From Entry ("(L)S10<GBH") all contracts next bar at UpsideTarget1 +.50 stop;    
	
{stop out}
	Sell ("+S10<GBH.Stopout") From Entry ("(L)S10<GBH") all contracts Next Bar at EntryPrice - 6 stop;                       
End;
{===============END LONG S10 ENTRIES below Globex High===============}




{===============LONG S10 ENTRIES below Upside Target 1, (S10<T1)===============}
{optimized for infinity range}
Inputs:
LS10underT1_H (17),
LS10underT1_L (7),
LS10underT1_R (9)
;

If L.S10.below.T1 = 1
And Marketposition = 0
And Time >= 825 
And Time < 1415                                                   
And (Highest (high,5) - Low < 3.5 or S10> S10[1]+.35)
And Low[1] >= S10 [1]
And (low[2] >= S10 [2] or (AbsValue(PredictedS10 - GlobexHigh) < 1.25 and S10> S10[1]+.45)) 
And S10TrendCount >0
And AbsValue(Highest(high,4) - R1) > .5
And (SessionHigh < UpsideTarget1 - .5 or S10> S10[1]+.45)
And AbsValue((Highest (high,10)- GlobexHigh))>2
And S10 > S10[1]+ .5                                                
And LTOpen > S10_30                                                             
And MyMACD > .1
And MyMACD_30 > 0  
And MyMACD > MyMACD [7] -.35              
And PredictedS10 + S10Range < UpsideTarget1 - 1
And PredictedS10 + S10Range >= GlobexHigh -1 
And AbsValue(PP - Bounceline) > .5
And Highest (Close, 17) - Lowest (Close, 7) > 9
//And Highest(MyMACD, 3) - Highest(MyMACD, 1) > - .1  {couldn't hand optimize this to any advantage, run thru the optimizer }  
 
Then begin
Buy ("(L)S10<T1") 4 contracts next bar at PredictedS10 + S10Range limit;
S10Entry.b= PredictedS10 + S10Range;
End;

{scale out}
Sell ("+S10.T1.b") From Entry ("(L)S10<T1") 2  contracts Next Bar at UpsideTarget1 - .5 limit;                  
Sell ("+S10.T2.b") From Entry ("(L)S10<T1") 1 contracts Next Bar at UpsideTarget2 - .5 limit;
Sell ("+S10.10pointer.b") From Entry ("(L)S10<T1") 1 contracts Next Bar at S10Entry.b + 10 limit;             

{stop out}
If S10Entry.b > Bounceline then
Sell ("+S10.BL.stop") From Entry ("(L)S10<T1") all contracts Next Bar at Bounceline - .5 stop;

{S10 PreHook}
If High < S10 
and (time > 1430 or High - Close > 1.25)
then sell ("+S10 pre-hook.b") from Entry ("(L)S10<T1") all contracts next bar at PredictedS10 limit;

{get safe} 
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 4
And UpsideTarget1 - Entryprice > 1.5 
then Sell ("+S10.SafeStop.g") From Entry ("(L)S10<T1") all contracts next bar at EntryPrice + .25 stop;
If Currentcontracts < 4
And UpsideTarget1 - Entryprice <= 1.5 
then Sell ("+S10.SafeStop.h") From Entry ("(L)S10<T1") all contracts next bar at EntryPrice - (UpsideTarget1 + 1 - EntryPrice) +.25 stop;              
If Currentcontracts < 3
then Sell ("+S10.SafeStop.i") From Entry ("(L)S10<T1") all contracts next bar at UpsideTarget1 - 4.5 stop;
If Currentcontracts < 2
then Sell ("+S10.SafeStop.j") From Entry ("(L)S10<T1") all contracts next bar at UpsideTarget1 - 1 stop;

{stop out}
Sell ("+S10<T1.Stopout") From Entry ("(L)S10<T1") all contracts Next Bar at EntryPrice - 5.75 stop;                      
End;
{===============END LONG S10 ENTRIES below Upside Target 1===============}



{===============LONG S10 ENTRIES below Upside Target 2, (S10<T2)Master===============}
{optimized for infinity range}
Inputs:
LS10underT2_H (36),
LS10underT2_L (22),
LS10underT2_R (4)
;
If L.S10.below.T2 = 1
And Marketposition = 0
And Time >= 825 
And Time < 1430                                                                                          
And S10> S10[1]+.1
And (Highest (high,5) - Low < 3.5 or S10> S10[1]+.55)
And Low[1] >= S10 [1]
And low[2] >= S10 [2]
And S10TrendCount >0
And AbsValue(PP - Bounceline) > .5                      
And SessionHigh < UpsideTarget2 - 1
And PredictedS10 + S10Range < UpsideTarget2 - 2
And PredictedS10 + S10Range >= Upsidetarget1 -.25 
And MyMACD > .1  
//And Highest(MyMACD, 3) - Highest(MyMACD, 1) > - .1  {couldn't hand optimize this to any advantage, run thru the optimizer }                                                
And Highest (Close, 36) - Lowest (Close, 22) > 4                  

Then begin
Buy ("(L)S10<T2") 4 contracts next bar at PredictedS10 + S10Range limit;
S10Entry.c= PredictedS10 + S10Range;
End;

{scale out}
Sell ("+S10.T2.c") From Entry ("(L)S10<T2") 2 contracts Next Bar at UpsideTarget2 - .5 limit;
Sell ("+S10.10pointer.c") From Entry ("(L)S10<T2") 1 contracts Next Bar at S10Entry.c + 10 limit;

{S10 PreHook}
If High < S10 
and (time > 1430 or High - Close > 1.25)
then sell ("+S10 pre-hook.c") from Entry ("(L)S10<T2") all contracts next bar at PredictedS10 limit;

{get safe} 
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 4
And UpsideTarget2 - Entryprice > 1.5 
then Sell ("+S10.SafeStop.k") From Entry ("(L)S10<T2") all contracts next bar at EntryPrice + .5 stop;
If Currentcontracts < 4
And UpsideTarget2 - Entryprice <= 1.5 
then Sell ("+S10.SafeStop.l") From Entry ("(L)S10<T2") all contracts next bar at EntryPrice - (UpsideTarget2 -.5 - EntryPrice) +.25 stop;
If Currentcontracts < 3
then Sell ("+S10.SafeStop.m") From Entry ("(L)S10<T2") all contracts next bar at UpsideTarget1 + .25 stop;
If Currentcontracts < 2
then Sell ("+S10.SafeStop.n") From Entry ("(L)S10<T2") all contracts next bar at UpsideTarget2 + 4 stop;
End;

{stop out}
Sell ("+S10<T2.Stopout") From Entry ("(L)S10<T2") all contracts Next Bar at S10Entry.c - 2.75 stop;
{===============END LONG S10 ENTRIES below Upside Target 2===============}



{===============LONG S10 ENTRIES above Upside Target 2, (S10>T2)===============}
If L.S10.above.T2 = 1
And Marketposition = 0
And Time >= 825 
And Time < 1430                                          
And Low[1] >= S10 [1]
And Close - PredictedS10 + S10Range < 2
And Open - Close < 2.25
And SessionHigh > UpsideTarget2 + 5                      
And PredictedS10 + S10Range >= Upsidetarget2 -.25               
And LTopen > S10_30 + 1                                   
And Highest (Close, 20) - Lowest (Close, 20) > 5 	        
 
Then begin
Buy ("(L)S10>T2") 4 contracts next bar at PredictedS10 + S10Range limit;
S10Entry.d= PredictedS10 + S10Range;
End;

{scale out}
Sell ("+S10>T2.a") From Entry ("(L)S10>T2") 2 contracts Next Bar at S10Entry.d + 3 limit;
Sell ("+S10.12pointer.d") From Entry ("(L)S10>T2") 1 contracts Next Bar at S10Entry.d + 12 limit;                 
If R1 > S10Entry.d + 2 Then Sell ("S10>T2.R1") From Entry ("(L)S10>T2") 1 contracts Next Bar at R1 - .5 limit;
If R2 > S10Entry.d + 2 Then Sell ("S10>T2.R2") From Entry ("(L)S10>T2") 1 contracts Next Bar at R2 - .5 limit;
If R3 > S10Entry.d + 2 Then Sell ("S10>T2.R3") From Entry ("(L)S10>T2") 1 contracts Next Bar at R3 - .75 limit;

{S10 PreHook}
If High < S10 
and (time > 1430 or High - Close > 1.75)
then sell ("+S10 pre-hook.d") from Entry ("(L)S10>T2") all contracts next bar at PredictedS10 limit;

{get safe} 
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 4
then Sell ("+S10.SafeStop.p") From Entry ("(L)S10>T2") all contracts next bar at EntryPrice + .5 stop;
If Currentcontracts < 2
then Sell ("+S10.SafeStop.q") From Entry ("(L)S10>T2") all contracts next bar at EntryPrice + 2 stop;
End;

{stop out}
Sell ("+S10>T2.Stopout") From Entry ("(L)S10>T2") all contracts Next Bar at S10Entry.d - 5.5 stop;                  
{===============END LONG S10 ENTRIES above Upside Target 2===============}
 
 
 
{===============LONG SCALP ENTRIES  Master===============}
If L.Scalp = 1
And Marketposition = 0
And time > 820
And time < 840
And Open > GlobexLow                                 
And Close > GlobexLow -.25
And Low > GlobexLow - 2
And High < GlobexLow + 4                            
And Close - GlobexLow < 3.5                           
And Bounceline - GlobexLow > 4                      
And S10_30 > S10_30[1] - .2                         
And MyMACD > - .3									                                   
And (Lowest (low, 5) > GlobexLow - 1.25 or lowest (close,5) > GlobexLow)  
And Close > S1                                             
  
Then begin
Buy ("(L)Scalp") 4 contracts next bar at GlobexLow + 1.25 limit;                     
End;  
 
{scale out}                                                            
Sell ("+Scalp.GH") From Entry ("(L)Scalp") 1 contracts Next Bar at GlobexHigh - .5 limit;                                                                                                 
Sell ("+Scalp.T1") From Entry ("(L)Scalp") 1 contracts Next Bar at UpsideTarget1 - .5 limit;
Sell ("+Scalp.T2") From Entry ("(L)Scalp") 1 contracts Next Bar at UpsideTarget2 - .75 limit;
If Entryprice <> 0 then Sell ("+Scalp.10pointer") From Entry ("(L)Scalp") all contracts Next Bar at EntryPrice + 10 limit;
If R1 > UpsideTarget2 Then Sell ("+Scalp.R1") From Entry ("(L)Scalp") 1 contracts Next Bar at R1 - .5 limit;
If R2 > UpsideTarget2 Then Sell ("+Scalp.R2") From Entry ("(L)Scalp") 1 contracts Next Bar at R2 - .5 limit;
If R3 > UpsideTarget2 Then Sell ("+Scalp.R3") From Entry ("(L)Scalp") 1 contracts Next Bar at R3 - .75 limit;
If AbsValue(PP - Bounceline) < 1 Then Sell ("+Scalp.PP.a") From Entry ("(L)Scalp")  all contracts next bar at Bounceline -.75 limit;                    
If AbsValue(PP - GlobexHigh) < 1.25 Then Sell ("+Scalp.PP.b") From Entry ("(L)Scalp")  all contracts next bar at GlobexHigh -.75 limit;
If AbsValue(PP - UpsideTarget1) < 1.25 Then Sell ("+Scalp.PP.c") From Entry ("(L)Scalp")  all contracts next bar at UpsideTarget1 -.75 limit;
If AbsValue(PP - UpsideTarget2) < 1.25 Then Sell ("+Scalp.PP.d") From Entry ("(L)Scalp")  all contracts next bar at UpsideTarget2 -.75 limit;

{get safe}
If Currentcontracts <> 0
Then begin

If Inpositionbarcount > 10
and highest(high,Inpositionbarcount) - lowest(low,Inpositionbarcount) < 7
then Sell ("+Scalp.SafeStop.g") From Entry ("(L)Scalp") all contracts Next Bar at GlobexLow -.5  stop;

	If Currentcontracts < 4
	then Sell ("+Scalp.SafeStop.a") From Entry ("(L)Scalp") all contracts Next Bar at Bounceline - 1 stop;
	If Currentcontracts < 3
	then Sell ("+Scalp.SafeStop.b") From Entry ("(L)Scalp") all contracts Next Bar at GlobexHigh - 1 stop;
	If Currentcontracts < 2 
	then Sell ("+Scalp.SafeStop.c") From Entry ("(L)Scalp") all contracts Next Bar at UpsideTarget1 - 1 stop;
End;

{stop out}
Sell ("+Scalp.Stopout") From Entry ("(L)Scalp") all contracts Next Bar at GlobexLow - 4.5 stop;           
{===============END LONG SCALP ENTRIES===============} 

 
{===============LONG BOUNCE ENTRY (L)BL===============}
Inputs:
LB_H (27),
LB_L (7),
LB_R (2)
;
If L.BL = 1
And Marketposition = 0
And Time >= 825 
And Time < 1430                                          
And Open > Bounceline -1
And Close > Bounceline -.5
And High - Close < 3
And Low < Bounceline + 1                   
And Highest(high,10) > Bounceline + 1
And Highest (high, 20) < UpsideTarget1 - 1
And Lowest (low, 15) > Bounceline - .75
And GlobexHigh - Bounceline > 2.5             
And MyMACD > - .5                              
And LTopen > S10_30 - 1		
And MyMACD > MyMACD [7] -.4				      	
And Highest (Close, 27) - Lowest (Close, 7) > 2        				        							
 
Then begin
Buy ("(L)BL") 4 contracts next bar at Bounceline + .75 limit;
End;

{scale out}
Sell ("+BL.GH") From Entry ("(L)BL") 1 contracts Next Bar at GlobexHigh - .5 limit;                                         
Sell ("+BL.T1") From Entry ("(L)BL") 1 contracts Next Bar at UpsideTarget1 - .5 limit;
Sell ("+BL.T2") From Entry ("(L)BL") 1 contracts Next Bar at UpsideTarget2 - .75 limit;
If Entryprice <> 0 then Sell ("+BL.10pointer") From Entry ("(L)BL") 1 contracts Next Bar at EntryPrice + 10 limit;           
If S10 < Bounceline - 2.50 Then Sell ("+BL.S10<BLstop") From Entry ("(L)BL") all contracts This Bar;                            
If PP > Bounceline + 2.25 Then Sell ("+BL.PP") From Entry ("(L)BL") 1 contracts Next Bar at PP - .5 limit;
If R1 > UpsideTarget2 Then Sell ("+BL.R1") From Entry ("(L)BL") 1 contracts Next Bar at R1 - .5 limit;
If R2 > UpsideTarget2 Then Sell ("+BL.R2a") From Entry ("(L)BL") 1 contracts Next Bar at R2 - .5 limit;
If R3 > UpsideTarget2 Then Sell ("+BL.R3") From Entry ("(L)BL") 1 contracts Next Bar at R3 - .75 limit;
If AbsValue(PP - GlobexHigh) < 1.25 Then Sell ("+BL.PP.a") From Entry ("(L)BL")  all contracts next bar at GlobexHigh -.75 limit;
If AbsValue(PP - UpsideTarget1) < 1.25 Then Sell ("+BL.PP.b") From Entry ("(L)BL")  all contracts next bar at UpsideTarget1 -.75 limit;
If AbsValue(PP - UpsideTarget2) < 1.25 Then Sell ("+BL.PP.c") From Entry ("(L)BL")  all contracts next bar at UpsideTarget2 -.75 limit;
If (High - Close) > + 4  then  Sell ("+S10.RedERC") From Entry ("(L)BL") all contracts Next Bar at Market;                                         

{get safe}
If Currentcontracts <> 0
Then begin
If Currentcontracts < 4
then Sell ("+BL.SafeStop.a") From Entry ("(L)BL") all contracts Next Bar at Bounceline - .25 stop;            
If Currentcontracts < 3
then Sell ("+BL.SafeStop.b") From Entry ("(L)BL") all contracts Next Bar at GlobexHigh - .25 stop;                    
If Currentcontracts < 2
then Sell ("+BL.SafeStop.c") From Entry ("(L)BL") all contracts Next Bar at UpsideTarget1 - .25 stop; 
End;

{stop out}
Sell ("+BL.Stopout") From Entry ("(L)BL") all contracts Next Bar at Bounceline - 4.75 stop;                   
{===============END LONG BOUNCE ENTRY===============}



{===============LONG Z-PATTERN GlobexHigh ENTRY (L)Z-GBH Master===============}
Inputs:
LZ_GBH_H (36),
LZ_GBH_L (28),
LZ_GBH_R (2.75)
;
If L.Z_GBH = 1
And Marketposition = 0
And Time >= 825 
And Time < 1430                                        
And Close >= GlobexHigh   
And Low >= GlobexHigh -.75                               	 
//And High - Close < 2
And Highest(high,10) > GlobexHigh + 2
//And Lowest (low, 25) < GlobexHigh -1.75
And UpsideTarget1 - GlobexHigh > 2.25                      
And AbsValue((Highest (high,10)-R2))>1
//And AbsValue((Highest (high,10)-R2))>1
And S10 < GlobexHigh + 3.75                               
And S10 > S10[1]                                         
And LTopen > S10_30 - 1                                   
And MyMACD_30 > -.4                                      
And MyMACD > -.4
And AbsValue(PP - GlobexHigh) > 1                        
And Highest(high,10) < UpsideTarget1 - 2
And Highest (Close, 36) - Lowest (Close, 28) > 2.75 {optimization unfinished}               
                                                                 
Then begin
Buy ("(L)Z-GBH") 4 contracts next bar at GlobexHigh + 0.75 limit;
End;

{scale out}
Sell ("+Z-GBH.T1") From Entry ("(L)Z-GBH") 1 contracts Next Bar at UpsideTarget1 - .5 limit;                                                         
Sell ("+Z-GBH.T2") From Entry ("(L)Z-GBH") 2 contracts Next Bar at UpsideTarget2 - .75 limit;							                             	
Sell ("+Z-GBH.12pointer") From Entry ("(L)Z-GBH") 1 contracts Next Bar at GlobexHigh + .75 + 12 limit;					                            
If PP > GlobexHigh + 2.25 Then Sell ("+Z-GBH.PP") From Entry ("(L)Z-GBH") 1 contracts Next Bar at PP - .5 limit;	                               	
If R1 > UpsideTarget1 Then Sell ("+Z-GBH.R1") From Entry ("(L)Z-GBH") 1 contracts Next Bar at R1 - .5 limit;			
If R2 > GlobexHigh + .75 and S10 < GlobexHigh Then Sell ("+Z-GBH.R2") From Entry ("(L)Z-GBH") 1 contracts Next Bar at R2 - .5 limit;	            
If R3 > GlobexHigh + .75 Then Sell ("+Z-GBH.R3") From Entry ("(L)Z-GBH") 1 contracts Next Bar at R3 - .75 limit;							

{get safe}
If Currentcontracts <> 0
Then begin
If Currentcontracts < 4
then Sell ("+Z-GBH.SafeStop.a") From Entry ("(L)Z-GBH") all contracts Next Bar at GlobexHigh - .75 stop;							
If Currentcontracts < 3
then Sell ("+Z-GBH.SafeStop.b") From Entry ("(L)Z-GBH") all contracts Next Bar at UpsideTarget1 - 5 stop;                       
If Currentcontracts < 2
then Sell ("+Z-GBH.SafeStop.c") From Entry ("(L)Z-GBH") all contracts Next Bar at UpsideTarget1 - 1.5 stop;                      
End;

{stop out}
If S10 < GlobexHigh - 1.5 then
Sell ("+Z-GBH>S10.Stop") From Entry ("(L)Z-GBH") all contracts Next Bar at S10 - 1 stop
Else 
Sell ("+Z-GBH.Stopout") From Entry ("(L)Z-GBH") all contracts Next Bar at GlobexHigh - 4.75 stop;                         
{===============END LONG Z-PATTERN GlobexHigh ENTRY===============}



{===============LONG Z-PATTERN Bounceline ENTRY (L)Z-BL Master===============}
If L.Z_BL = 1
And Marketposition = 0
And Time >= 825 
And Time < 1430                                   
And Open >= Bounceline
And Open < Bounceline + 2.5           
And Close > Bounceline
And Close < Bounceline + 2.5          
And Low > Bounceline -.5
And Low < Bounceline + 2
And High - Close < 3
And Highest(high,10) > Bounceline + 2                            
And Lowest (low, 20) < Bounceline -1.75
And AbsValue(Highest (high,3) - GlobexHigh) > 0
And (S10 < Bounceline +.2 or S19 < Bounceline +.2)
And S10 > S10[1] + .4                                            
And S10_30 > S10_30[1] - .2                                       
And (Close > S10_30[1] or S10_30 > S10_30[1]) 
And GlobexHigh - Bounceline > 2.5
And LTopen > S10_30 - 2                                          
And MyMACD_30 > - .2                                              
And MyMACD > - .1
And (PP < Bounceline +.75 or PP - (Bounceline + .75) > 1)         
And Highest(high,10) < GlobexHigh + .25 
And Highest (Close, 10) - Lowest (Close, 10) > 3                                 
 
Then begin
Buy ("(L)Z-BL") 4 contracts next bar at Bounceline + 0.75 limit;
End; 

{scale out}
Sell ("+Z-BL.GBH") From Entry ("(L)Z-BL") 2 contracts Next Bar at GlobexHigh - .75 limit;                       
Sell ("+Z-BL.T1") From Entry ("(L)Z-BL") 1 contracts Next Bar at UpsideTarget1 - .75 limit;                      
Sell ("+Z-BL.T2") From Entry ("(L)Z-BL") 1 contracts Next Bar at UpsideTarget2 - .75 limit;
If Entryprice <>0 then Sell ("+Z-BL.10pointer") From Entry ("(L)Z-BL") 1 contracts Next Bar at EntryPrice + 10 limit;
If PP > Bounceline + 2.25 Then Sell ("+Z-BL.PP") From Entry ("(L)Z-BL") 1 contracts Next Bar at PP - .5 limit;
If R1 > UpsideTarget1 Then Sell ("+Z-BL.R1") From Entry ("(L)Z-BL") 1 contracts Next Bar at R1 - .5 limit;                        
If R2 > Bounceline Then Sell ("+Z-BL.R2") From Entry ("(L)Z-BL") 1 contracts Next Bar at R2 - .5 limit;     
If R3 > Bounceline Then Sell ("+Z-BL.R3") From Entry ("(L)Z-BL") 1 contracts Next Bar at R3 - .75 limit;
If R2 > UpsideTarget1 Then Sell ("+Z-BL.R2a") From Entry ("(L)Z-BL") 1 contracts Next Bar at R2 - .5 limit;       
If R3 > UpsideTarget1 Then Sell ("+Z-BL.R3a") From Entry ("(L)Z-BL") 1 contracts Next Bar at R3 - .75 limit;
If AbsValue(PP - GlobexHigh) < 1.25 Then Sell ("+Z-BL.PP.a") From Entry ("(L)Z-BL")  1 contracts next bar at GlobexHigh -.75 limit;       
If AbsValue(PP - UpsideTarget1) < 1.25 Then Sell ("+Z-BL.PP.b") From Entry ("(L)Z-BL")  all contracts next bar at UpsideTarget1 -.75 limit;
If AbsValue(PP - UpsideTarget2) < 1.25 Then Sell ("+Z-BL.PP.c") From Entry ("(L)Z-BL")  all contracts next bar at UpsideTarget2 -.75 limit;

{get safe}
If Currentcontracts <> 0
Then begin
If Currentcontracts < 4
then Sell ("+Z-BL.SafeStop.a") From Entry ("(L)Z-BL") all contracts Next Bar at Bounceline + .75 stop;
If Currentcontracts < 3
then Sell ("+Z-BL.SafeStop.b") From Entry ("(L)Z-BL") all contracts Next Bar at GlobexHigh - 3 stop;                   
If Currentcontracts < 2
then Sell ("+Z-BL.SafeStop.c") From Entry ("(L)Z-BL") all contracts Next Bar at UpsideTarget1 - 3.5 stop;
End;

{stop out}
Sell ("+Z-BL.Stopout") From Entry ("(L)Z-BL") all contracts Next Bar at Bounceline - 5.25 stop;                 
{===============END LONG Z-PATTERN Bounceline ENTRY===============}



{===============LONG ERC ENTRIES below Globex High  (L)ERC<GBH  Master===============}
If L.ERC.below.GBH = 1
And Marketposition = 0
And Time >= 825 
And Time < 1445                                          
And Close < GlobexHigh - 1
And Close - Low  > 4                                     
And Close > S10
And MyMACD > + .1                                        
And AbsValue(Highest(high,5) - GlobexHigh) > .75
And AbsValue(Highest(high,5) - Bounceline) > .75
And (PP - Close) > 1.5
And Highest (Close, 10) - Lowest (Close, 10) > 4          
     
Then begin
Buy ("(L)ERC<GBH") 4 contracts next bar at Close - .75 limit;
ERCEntry.a = Close -.75;               
End;

{scale out}
Sell ("+ERC.GH.a") From Entry ("(L)ERC<GBH") 2 contracts Next Bar at GlobexHigh - .5 limit;                                                    
Sell ("+ERC.T1.a") From Entry ("(L)ERC<GBH") 1 contracts Next Bar at UpsideTarget1 - .5 limit;
Sell ("+ERC.T2.a") From Entry ("(L)ERC<GBH") 1 contracts Next Bar at UpsideTarget2 - .75 limit;
Sell ("+ERC.PP.a") From Entry ("(L)ERC<GBH") 1 contracts Next Bar at PP - .75 limit;

{S10 PreHook}
If High < S10 
and (Close < Open - .5 or time > 1445 or High - Close > .75)
then sell ("+ERC.pre-hook.a") from Entry ("(L)ERC<GBH") all contracts next bar at PredictedS10 limit;            


{get safe} 
If Currentcontracts <> 0
Then Begin
	If Currentcontracts < 4
	And GlobexHigh - ERCEntry.a > 2.25 
	then Sell ("+ERC.SafeStop.a") From Entry ("(L)ERC<GBH") all contracts next bar at ERCEntry.a - 1.5 stop;                                          
	
	If Currentcontracts < 4
	And GlobexHigh - Entryprice <= 2.25 
	then Sell ("+ERC.SafeStop.b") From Entry ("(L)ERC<GBH") all contracts next bar at ERCEntry.a - (GlobexHigh -.5 - ERCEntry.a) +.25 stop;
	
	If Currentcontracts < 3
	And Close[1]> open[1] 
	And Close < Low[1]
	And Close < S19 
	then Sell ("+ERC.SafeStop.c") From Entry ("(L)ERC<GBH") all contracts next bar at S19- 1 stop;
	
	If Currentcontracts < 2
	then Sell ("+ERC.SafeStop.d") From Entry ("(L)ERC<GBH") all contracts next bar at ERCEntry.a + 3 stop;                                                                         
End;

{stop out}
Sell ("+ERC<GBH.Stopout") From Entry ("(L)ERC<GBH") all contracts Next Bar at ERCEntry.a - 5.5 stop;                                            
{===============END ERC ENTRIES below Globex High===============}



































{000000000000000000000000000000000000000000000000000000000000000000000000000000=======SHORT ENTRIES=======00000000000000000000000000000000000000000000000000000000000000000}


{000000000000000000000=======SHORT SCALP ENTRY (S)Scalp=======000000000000000000}
If S.Scalp = 1
And Marketposition = 0
And time > 830
And time < 840
And GlobexHigh - Bounceline > 2
And Close <= GlobexHigh - .5
And Highest (high,3) > GlobexHigh + .25 
And MyMACD_30 < + 1                                            
And LTopen < S10_30 + 8  
And Highest (Close, 5) - Lowest (Close, 5) > 1 
          //And Lowest(MyMACD, 1) - Lowest(MyMACD, 7) < + .3  {needs to be optomized}               						                

Then begin
Sellshort ("(S)Scalp") 4 contracts next bar at GlobexHigh - .75 limit;
End;

{scale out}
Buytocover ("-Scalp.GL") From Entry ("(S)Scalp") 1 contracts Next Bar at GlobexLow + .5 limit;           
Buytocover ("-Scalp.T1") From Entry ("(S)Scalp") 1 contracts Next Bar at DownsideTarget1 + .5 limit;
Buytocover ("-Scalp.T2") From Entry ("(S)Scalp") 1 contracts Next Bar at DownsideTarget2 + .75 limit;                      
If Entryprice <> 0 then Buytocover ("-Scalp.14pointer") From Entry ("(S)Scalp") all contracts Next Bar at EntryPrice - 14 limit;
If S1 < DownsideTarget2 Then Buytocover ("-Scalp.S1") From Entry ("(S)Scalp") 1 contracts Next Bar at S1 + .5 limit;
If S2 < DownsideTarget2 Then Buytocover ("-Scalp.S2") From Entry ("(S)Scalp") 1 contracts Next Bar at S2 + .5 limit;
If S3 < DownsideTarget2 Then Buytocover ("-Scalp.S3") From Entry ("(S)Scalp") 1 contracts Next Bar at S3 + .75 limit;

{get safe} 
If Currentcontracts <> 0
Then begin
If Currentcontracts < 4
then Buytocover ("-Scalp.SafeStop.a") From Entry ("(S)Scalp") all contracts Next Bar at Bounceline + 2.5 stop;                    
If Currentcontracts < 3
then Buytocover ("-Scalp.SafeStop.b") From Entry ("(S)Scalp") all contracts Next Bar at GlobexLow  + 3 stop;                     
If Currentcontracts < 2
then Buytocover ("-Scalp.SafeStop.c") From Entry ("(S)Scalp") all contracts Next Bar at DownsideTarget1 + 2 stop;

{stop out}
Buytocover ("-Scalp.Stopout") From Entry ("(S)Scalp") all contracts Next Bar at GlobexHigh + 1  stop;                           
End;
{00000000000000000000000=======END OF SHORT SCALP ENTRY=======000000000000000000}



{00000000000000000000000=======SHORT BOUNCE ENTRY  (S)BL=======000000000000000000}
If S.BL = 1
And Marketposition = 0
And Time >= 825 
And Time < 1400
And Close <= Bounceline + 1 
And Highest (High,1) < Bounceline + 2                       
//And Lowest(low,10) < Bounceline - 4            
And Lowest(low,10) > DownsideTarget1 + .5                     
And AbsValue(PP - GlobexLow) > 1.25
And (Bounceline - GlobexLow > 2.5)                    
And MyMACD_30 < - .7                                          
And S10_30 < S10_30[1]
And Highest (Close, 10) - Lowest (Close, 10) > 6  
//And Lowest(MyMACD, 1) - Lowest(MyMACD, 7) < + .3  {needs to be optomized}                 	                                        
  
Then begin
Sellshort ("(S)BL") 4 contracts next bar at Bounceline -.75 limit;  
End;

{scale out} 
Buytocover ("-BL.GL") From Entry ("(S)BL") 1 contracts Next Bar at GlobexLow + .5 limit;                              
Buytocover ("-BL.T1") From Entry ("(S)BL") 1 contracts Next Bar at DownsideTarget1 + .75 limit;                        
Buytocover ("-BL.T2") From Entry ("(S)BL") 1 contracts Next Bar at DownsideTarget2 + .75 limit;
Buytocover ("-BL.10pointer") From Entry ("(S)BL") 2 contracts Next Bar at Bounceline - 10 limit;                          
If S1 < DownsideTarget2 - 1.5 then Buytocover ("-BL.S1.f") From Entry ("(S)BL") 1 contracts Next Bar at S1 + .5 limit;     
If S2 < DownsideTarget2 - 1.5 then Buytocover ("-BL.S2.f") From Entry ("(S)BL") 1 contracts Next Bar at S2 + .75 limit;  
If S3 < DownsideTarget2 - 1.5 then Buytocover ("-BL.S3.f") From Entry ("(S)BL") 1 contracts Next Bar at S3 + .75 limit;

{get safe}
If Currentcontracts <> 0
Then begin
	If Currentcontracts < 4
	then Buytocover ("-BL.SafeStop.a") From Entry ("(S)BL") all contracts Next Bar at Bounceline + 1.75 stop;    
	If Currentcontracts < 3
	then Buytocover ("-BL.SafeStop.b") From Entry ("(S)BL") all contracts Next Bar at Bounceline - 4 stop;                  
	If Currentcontracts < 2
	then Buytocover ("-BL.SafeStop.c") From Entry ("(S)BL") all contracts Next Bar at GlobexLow + 1 stop;                     
End;

{stop out}
Buytocover ("-BL.Stopout") From Entry ("(S)BL") all contracts Next Bar at Bounceline + 4 stop;                           
{00000000000000========END OF SHORT BOUNCE TRADES======00000000000}



{00000000000000========SHORT Z-PATTERN Bounceline ENTRY (S)Z-BL Master======00000000000}
If S.Z_BL = 1
And Marketposition = 0
And Time >= 825 
And Time < 1440
And Open < Bounceline + 1.25 
And Close < Bounceline
And Close > Bounceline - 2.5
And Bounceline - GlobexLow > 3
And Lowest(low,5) < Bounceline - 2                
//And Highest(high,6) > Bounceline + 1.75
And AbsValue(PP - GlobexLow) > 3                        
And LTopen < S10_30 +.1                                   
And S10 < S10[1]                                          
And MyMACD < -.3                {this is way too sensitive to be right, might look at this}                                                                        
And (Bounceline - S1) > 3                                      
And MyMACD_30 < 0                                      
And S10_30 < S10_30[1] +.1 
//And Highest (Close, 10) - Lowest (Close, 10) > 6  {needs to be optomized work this hard, can't be a flat market}  
//And Lowest(MyMACD, 1) - Lowest(MyMACD, 7) < + .3  {needs to be optomized}                       
       
Then begin
Sellshort ("(S)Z-BL") 4 contracts next bar at Bounceline - .75 limit;
End;

{scale out}
Buytocover ("-(S)Z-BL.T1") From Entry ("(S)Z-BL") 1 contracts Next Bar at DownsideTarget1 + .75 limit;
Buytocover ("-(S)Z-BL.T2") From Entry ("(S)Z-BL") 1 contracts Next Bar at DownsideTarget2 + .75 limit;
Buytocover ("-Z-BL.15pointer") From Entry ("(S)Z-BL") 2 contracts Next Bar at Bounceline - 15 limit;
If S1 < DownsideTarget1 Then Buytocover ("-(S)Z-BL.S1") From Entry ("(S)Z-BL") 1 contracts Next Bar at S1 + .50 limit;         
If S2 < DownsideTarget1 Then Buytocover ("-(S)Z-BL.R2") From Entry ("(S)Z-BL") 1 contracts Next Bar at S2 + .75 limit;            
If S3 > DownsideTarget2 Then Buytocover ("-(S)Z-BL.R3") From Entry ("(S)Z-BL") 1 contracts Next Bar at S3 + .75 limit;
If (Close - Low) > + 5.5  Then Buytocover ("(S)Z-BL.GreenERC") From Entry ("(S)Z-BL") all contracts Next Bar at Market;  

{get safe}
If Currentcontracts <> 0
Then begin
If Currentcontracts < 4
then Buytocover ("-(S)Z-BL.SafeStop.a") From Entry ("(S)Z-BL") all contracts Next Bar at Bounceline + 1 stop;                  
If Currentcontracts < 3
then Buytocover ("-(S)Z-BL.SafeStop.b") From Entry ("(S)Z-BL") all contracts Next Bar at GlobexLow - 1.25 stop;                  
If Currentcontracts < 2
then Buytocover ("-(S)Z-BL.SafeStop.c") From Entry ("(S)Z-BL") all contracts Next Bar at DownsideTarget1 - .25 stop;
End;

{stop out}
Buytocover ("-(S)Z-BL.Stopout") From Entry ("(S)Z-BL") all contracts Next Bar at Bounceline + 4. stop;                      
{00000000000000========END OF SHORT Z-PATTERN Bounceline ENTRY======00000000000}



{00000000000000========SHORT Z-PATTERN OFF GLOBEX LOW ENTRY (S)Z-GBL Master======00000000000}
If S.Z_GBL = 1
And Marketposition = 0
And Time >= 825 
And Time < 1430                                                
And Open < GlobexLow + .75
And Close < GlobexLow
And High > GlobexLow - 1
And High < GlobexLow + 1.25                             
And High - Low < 4.5                          
And GlobexLow - DownsideTarget1 > 1.75
And Lowest(low,5) < GlobexLow - 2
And Highest(high,20) > GlobexLow + 1.25   
And (GlobexLow - PP) > 2.0                              
And (S10 > GlobexLow + 1)
And Lowest(low,5) > DownsideTarget1 +.25	           
And LTopen < S10_30                                    
And S10_30 < S10_30[1]                                                              
And MyMACD_30 < +.2  
And Highest (Close, 5) - Lowest (Close, 5) > 2   {needs to be optomized} 
//And Lowest(MyMACD, 1) - Lowest(MyMACD, 7) < + .3  {needs to be optomized}                  	                                   

Then begin
Sellshort ("(S)Z-GBL") 4 contracts next bar at GlobexLow - .75 limit;
End;

{scale out}
Buytocover ("-Z-GBL.T1") From Entry ("(S)Z-GBL") 1 contracts Next Bar at DownsideTarget1 + .5 limit;                               
Buytocover ("-Z-GBL.T2") From Entry ("(S)Z-GBL") 1 contracts Next Bar at DownsideTarget2 + .75 limit;
If S1 < DownsideTarget2 Then Buytocover ("-(S)Z-GBL.S1") From Entry ("(S)Z-GBL") 1 contracts Next Bar at S1 + .50 limit;            
If S2 < DownsideTarget1 Then Buytocover ("-(S)Z-GBL.S2") From Entry ("(S)Z-GBL") 1 contracts Next Bar at S2 + .50 limit;            
If S3 < DownsideTarget1 Then Buytocover ("-(S)Z-GBL.S3") From Entry ("(S)Z-GBL") 1 contracts Next Bar at S3 + .50 limit;

{get safe}
If Currentcontracts <> 0
Then begin
If Currentcontracts < 4
then Buytocover ("-Z-GBL.SafeStop.a") From Entry ("(S)Z-GBL") all contracts Next Bar at GlobexLow + 2 stop;                      
If Currentcontracts < 3
then Buytocover ("-Z-GBL.SafeStop.b") From Entry ("(S)Z-GBL") all contracts Next Bar at GlobexLow  + 2 stop;                      
If Currentcontracts < 2
then Buytocover ("-Z-GBL.SafeStop.c") From Entry ("(S)Z-GBL") all contracts Next Bar at DownsideTarget2 + 9 stop;        
End;

{stop out}
Buytocover ("-Z-GBL.Stopout") From Entry ("(S)Z-GBL") all contracts Next Bar at GlobexLow + 5 stop;    
{00000000000000========END OF SHORT Z OF GLOBEXLOW ENTRY======00000000000}



{00000000000000========SHORT S10 ENTRY above Globex Low, (S10>GBL) Master======000000000000000}
If S.S10.below.GBL = 1
And Marketposition = 0 
And Time >= 825 
And Time < 1445                                                   
And S10 < S10[1] - .55
And Bounceline - GlobexLow > 2.25                                  
//And PP > DownsideTarget1                            
//And (High - lowest(low,5) < 3.5 or S10< S10[1]-.55)
And high <= S10
And high[1] <= S10 [1]
And high[2] <= S10 [2]
And S10TrendCount < -4 
And LTOpen < S10_30 + 3                                          
And S10_30 < S10_30 [1]
And Lowest(low,5) > DownsideTarget1	                                          
And AbsValue((lowest (low,10)- Globexlow)) > 0.5
And AbsValue((lowest (low,10)- PP)) > 0
And AbsValue (Lowest(low,5) - S1) > .25
And AbsValue (Lowest(low,5) - S2) > .25
And AbsValue (Lowest(low,5) - S3) > .25	
And Lowest (oSlowD,5) > 10
And Close < Bounceline                                            
And PredictedS10 < GlobexHigh
And PredictedS10 - S10Range > GlobexLow + 1
And Highest (Close, 20) - Lowest (Close, 20) > 6 
And Lowest(MyMACD, 1) - Lowest(MyMACD, 4) < + .8   {optomized 3.17}
And 
	((Ten_Day_MA_ready = 1 and Close < Ten_Day_MA_AVG)
	Or
	Ten_Day_MA_ready = 0)
 
Then begin
Sellshort ("(S)S10>GBL") 4 contracts next bar at PredictedS10 - S10Range limit;
S10Entry.e= PredictedS10 - S10Range;
End;

{scale out}
Buytocover ("-S10.GBL.e") From Entry ("(S)S10>GBL") 1 contracts Next Bar at GlobexLow + .5 limit;
Buytocover ("-S10.T1.e") From Entry ("(S)S10>GBL") 1 contracts Next Bar at DownsideTarget1 + .5 limit;
Buytocover ("-S10.T2.e") From Entry ("(S)S10>GBL") 1 contracts Next Bar at DownsideTarget2 + .5 limit; 
Buytocover ("-S10>GBL10pointer") From Entry ("(S)S10>GBL") 1 contracts Next Bar at GlobexLow - 10 limit;             

{S10 PreHook}
If Low > S10            
and (Close > Open + .5 or time > 1445 or Close - Low > 1.25)
then Buytocover ("-S10 pre-hook.e") from Entry ("(S)S10>GBL") all contracts next bar at PredictedS10 limit;

{get safe}
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 4 
And S10Entry.e - GlobexLow > 2.25 
then Buytocover ("-S10.SafeStop.a") From Entry ("(S)S10>GBL") all contracts next bar at S10Entry.e + 3 stop;
{If Currentcontracts < 4
then Buytocover ("-S10.SafeStop.b") From Entry ("(S)S10>GBL") all contracts next bar at GlobexLow   + 7 stop; }            
If Currentcontracts < 3
then Buytocover ("-S10.SafeStop.c") From Entry ("(S)S10>GBL") all contracts next bar at DownsideTarget1    + 4.5 stop;            
If Currentcontracts < 2
then Buytocover ("-S10.SafeStop.d") From Entry ("(S)S10>GBL") all contracts next bar at DownsideTarget1    - 1.5 stop;             
End;
 
{stop out}
Buytocover ("-S10.Stopout.a") From Entry ("(S)S10>GBL") all contracts Next Bar at S10Entry.e + 5.25 stop;                       
{00000000000000=====END SHORT S10 ENTRIES above Globex Low=======00000000000000}



{00000000000000000=====SHORT S10 ENTRIES above Downside Target 1 (S10>T1)=======000000000000000}
If S.S10.above.T1 = 1
And Marketposition = 0 
And Time >= 825 
And Time < 1345                                                   
And S10 < S10[1]
//And (PP < GlobexLow or PP > UpsideTarget1)
And high <= S10 + 1
And PredictedS10 < GlobexLow
And PredictedS10 - S10Range > DownsideTarget1 + 1
And AbsValue (PP - close) > .25                                      
And Highest (Close, 10) - Lowest (Close, 10) > 4 
And MyMACD < MyMACD [2] + .7  {replace with this and optomize  And Lowest(MyMACD, 1) - Lowest(MyMACD, 4) < + .8 }                   
And 
	((Ten_Day_MA_ready = 1 and Close < Ten_Day_MA_AVG)
	Or
	Ten_Day_MA_ready = 0)                     


Then begin
Sellshort ("(S)S10>T1") 4 contracts next bar at PredictedS10 - S10Range limit;
S10Entry.f= PredictedS10 - S10Range;
End;

{scale out}
If S10Entry.f - DownsideTarget1 > 1 Then Buytocover ("-S10.T1.f") From Entry ("(S)S10>T1") 1 contracts Next Bar at DownsideTarget1 + .5 limit;               
Buytocover ("-S10.T2.f") From Entry ("(S)S10>T1") 1 contracts Next Bar at DownsideTarget2 + .5 limit;
Buytocover ("-S10.7pointer.d") From Entry ("(S)S10>T1") 1 contracts Next Bar at S10Entry.f - 7 limit;                                 
If S1 < DownsideTarget2 - 1.5 then Buytocover ("-S10.S1.f") From Entry ("(S)S10>T1") 1 contracts Next Bar at S1 + 1 limit;
If S2 < DownsideTarget2 - 1.5 then Buytocover ("-S10.S2.f") From Entry ("(S)S10>T1") 1 contracts Next Bar at S2 + .75 limit;  
If S3 < DownsideTarget2 - 1.5 then Buytocover ("-S10.S3.f") From Entry ("(S)S10>T1") 1 contracts Next Bar at S3 + .75 limit;

{S10 PreHook}
If Low > S10 
and (Close > Open + .5 or time > 1430 or Close - Low > 3)
then Buytocover ("-S10 pre-hook.f") from Entry ("(S)S10>T1") all contracts next bar at PredictedS10 limit;          

{get safe}
If Currentcontracts <> 0
Then Begin
	If Currentcontracts < 4
	And S10Entry.f - DownsideTarget1 > 2.25 
	then Buytocover ("-S10.SafeStop.e") From Entry ("(S)S10>T1") all contracts next bar at S10Entry.f + 1 stop;                     
	
	If Currentcontracts < 3
	then Buytocover ("-S10.SafeStop.g") From Entry ("(S)S10>T1") all contracts next bar at DownsideTarget1 + 3 stop;             
	
	If Currentcontracts < 2
	then Buytocover ("-S10.SafeStop.h") From Entry ("(S)S10>T1") all contracts next bar at DownsideTarget2 + .5 stop;               
	
	If (S10 > S19 or S10 crosses over S19) then Buytocover ("-S10.SafeStop.i") From Entry ("(S)S10>T1") all contracts next bar at EntryPrice stop;
	
{stop out}
	Buytocover ("-S10.Stopout.f") From Entry ("(S)S10>T1") all contracts Next Bar at Bounceline +.5 stop;     
End;
{0000000000000000000000=====END SHORT S10 ENTRIES above Downside Target 1========00000000000000000000}




{000000000000000======SHORT S10 ENTRIES above Downside Target 2, (S10>T2)=======00000000000000}
If S.S10.above.T2 = 1
And Marketposition = 0 
And Time >= 825 
And Time < 1445                                                   
And S10 < S10[1] +.2                                               
//And PP > S10
And high <= S10 + .5
And PredictedS10 - S10Range > DownsideTarget2 + 1
And (Close - DownsideTarget2) > 2                    
And PredictedS10 < DownsideTarget1          
And AbsValue (Close - DownsideTarget1) > .75  
And Highest (Close, 20) - Lowest (Close, 20) > 7 
And MyMACD < MyMACD [2] + .7     {replace with this and optomize  And Lowest(MyMACD, 1) - Lowest(MyMACD, 4) < + .8 }   

Then begin
Sellshort ("(S)S10>T2") 4 contracts next bar at PredictedS10 - S10Range limit;
S10Entry.g= PredictedS10 - S10Range;
End;

{scale out}
Buytocover ("-S10.T2.g") From Entry ("(S)S10>T2") 1 contracts Next Bar at DownsideTarget2 + .5 limit;                            
If S1 < S10Entry.g - 1.5 then Buytocover ("-S10.S1.g") From Entry ("(S)S10>T2") 1 contracts Next Bar at S1 + .75 limit;
If S2 < S10Entry.g - 1.5 then Buytocover ("-S10.S2.g") From Entry ("(S)S10>T2") 1 contracts Next Bar at S2 + .75 limit;   
If S3 < S10Entry.g - 1.5 then Buytocover ("-S10.S3.g") From Entry ("(S)S10>T2") 1 contracts Next Bar at S3 + 1 limit;
Buytocover ("-ERC.10pointer.c") From Entry ("(S)S10>T2") 1 contracts Next Bar at S10Entry.g - 10 limit;                          

{S10 PreHook}
If Low > S10 
and (Close > Open + .5 or time > 1430 or Close - Low > 3)
then Buytocover ("-S10 pre-hook.g") from Entry ("(S)S10>T2") all contracts next bar at PredictedS10 limit;

{get safe}
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 4
And S10Entry.g - DownsideTarget2 > 2.25 
then Buytocover ("-S10.SafeStop.o") From Entry ("(S)S10>T2") all contracts next bar at S10Entry.g + .75 stop;                        
If Currentcontracts < 4
then Buytocover ("-S10.SafeStop.j") From Entry ("(S)S10>T2") all contracts next bar at DownsideTarget1 + 3 stop;         
If Currentcontracts < 3
then Buytocover ("-S10.SafeStop.k") From Entry ("(S)S10>T2") all contracts next bar at DownsideTarget2 + 1 stop;                  
If Currentcontracts < 2
then Buytocover ("-S10.SafeStop.l") From Entry ("(S)S10>T2") all contracts next bar at DownsideTarget2 - 7 stop;   
End;
 
{stop out}
Buytocover ("-S10.Stopout.g") From Entry ("(S)S10>T2") all contracts Next Bar at S10Entry.g + 4 stop;                              
{000000000000000000=======END SHORT S10 ENTRIES above Upside Target 2========000000000000000000}


{0000000000000000======SHORT S10 ENTRIES below Upside Target 2, (S10<T2)=======000000000000000000}
If S.S10.below.T2 = 1 
And Marketposition = 0 
And Time >= 825 
And Time < 1445                                                                             
And Bounceline - GlobexLow > 2                                              
And S10 < S10[1] - .15
And high <= S10 + .5
And high[1] <= S10 [1]
And S10TrendCount < -10 
And  (PredictedS10 > S3 or S10 < S10[1]-.6)
And PredictedS10 < DownsideTarget2 - .5
//And Highest (Close, 5) - Lowest (Close, 5) > 1  this needs to be optomized
And MyMACD < MyMACD [40] + .1     {replace with this and optomize  And Lowest(MyMACD, 1) - Lowest(MyMACD, 4) < + .8 }  

Then begin
Sellshort ("(S)S10<T2") 4 contracts next bar at PredictedS10 - S10Range limit;
S10Entry.h= PredictedS10 - S10Range;
End;

{scale out}
Buytocover ("-S10<T2.4pt") From Entry ("(S)S10<T2") 1 contracts Next Bar at S10Entry.h - 4 limit;                                      
Buytocover ("-S10<T2.6pt") From Entry ("(S)S10<T2") 1 contracts Next Bar at S10Entry.h - 6 limit;
Buytocover ("-S10<T2.10pt") From Entry ("(S)S10<T2") 1 contracts Next Bar at S10Entry.h - 10 limit;
If S1 < S10Entry.h - 1.5 then Buytocover ("-S10.S1.h") From Entry ("(S)S10<T2") 1 contracts Next Bar at S1 + .75 limit;
If S2 < S10Entry.h - 1.5 then Buytocover ("-S10.S2.h") From Entry ("(S)S10<T2") 1 contracts Next Bar at S2 + .75 limit;                 
If S3 < S10Entry.h - 1.5 then Buytocover ("-S10.S3.h") From Entry ("(S)S10<T2") 1 contracts Next Bar at S3 + 1.50 limit;

{S10 PreHook}
If Low > S10 
and (Close > Open + .5 or time > 1445 or Close - Low > 1)
then Buytocover ("-S10 pre-hook.h") from Entry ("(S)S10<T2") all contracts next bar at PredictedS10 limit;

{get safe}
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 4
then Buytocover ("-S10.SafeStop.m") From Entry ("(S)S10<T2") all contracts next bar at S10Entry.h   stop;                                 
If Currentcontracts < 4                                                                                                   
then Buytocover ("-S10.SafeStop.n") From Entry ("(S)S10<T2") all contracts next bar at DownsideTarget2 - 2.75 stop;
If Currentcontracts < 3
then Buytocover ("-S10.SafeStop.p") From Entry ("(S)S10<T2") all contracts next bar at DownsideTarget2 - 3.5 stop;
If Currentcontracts < 2
then Buytocover ("-S10.SafeStop.q") From Entry ("(S)S10<T2") all contracts next bar at DownsideTarget2 - 3 stop;                         
End;
 
{stop out}
Buytocover ("-S10.Stopout.h") From Entry ("(S)S10<T2") all contracts Next Bar at S10Entry.h + 6 stop;                                     
{00000000000000========END OF SHORT S10 ENTRY below Downside Target 2======000000000000000}




{00000000000000========SHORT ERC ENTRY above GlobexHigh (ERC>GBH) Master======000000000000000}
If S.ERC.above.GBH = 1
And Marketposition = 0
And Time >= 825 
And Time < 1445                                  
And High - Close > 3.25                       
And Close < S10 + .75                          
And Close >= GlobexHigh
And S10_30 < S10_30[1] + .5                      
And LTopen < S10_30 + 6                                                    
And MyMACD < 0                               
And AbsValue (Close - UpsideTarget1) > 1.25   
And AbsValue (Close - GlobexHigh) > 1.25       
And AbsValue (Close - PP) > 3.5 
And Highest (Close, 10) - Lowest (Close, 10) > 3 
//And Lowest(MyMACD, 1) - Lowest(MyMACD, 7) < + .3  {needs to be optomized}                 
{And 
	((Fifty_Day_MA_ready = 1 and Close > Fifty_Day_MA_AVG +44)
	Or
	Fifty_Day_MA_ready = 0)} 
                                

Then begin
Sellshort ("(S)ERC>GBH") 4 contracts next bar at Close + .75 limit;                     
ERCEntry.e = Close + 1;                 
End;

{scale out}
Buytocover ("-ERC.GBH.e") From Entry ("(S)ERC>GBH") 1 contracts Next Bar at GlobexHigh + .5 limit;                             
Buytocover ("-ERC.BL.e") From Entry ("(S)ERC>GBH") 1 contracts Next Bar at Bounceline + .75 limit;                              
Buytocover ("-ERC.GBL.e") From Entry ("(S)ERC>GBH") 1 contracts Next Bar at GlobexLow + .5 limit;
Buytocover ("-ERC.14pointer") From Entry ("(S)ERC>GBH") 1 contracts Next Bar at ERCEntry.e - 14 limit;
If S1 < GlobexLow then Buytocover ("-ERC.S1.e") From Entry ("(S)ERC>GBH") 1 contracts Next Bar at S1 + .5 limit;      
If S2 < GlobexLow then Buytocover ("-ERC.S2.e") From Entry ("(S)ERC>GBH") 1 contracts Next Bar at S2 + .5 limit;
If S3 < GlobexLow then Buytocover ("-ERC.S3.e") From Entry ("(S)ERC>GBH") 1 contracts Next Bar at S3 + .5 limit;

{S10 PreHook}
If Low > S10
And (open [1] < S10[1]  or open[2] < S10[2] or open[3] < S10[3])
and (Close > Open + .75 or time > 1430 or  Close - Low > 1)
then Buytocover ("-ERC.pre-hook.e") from Entry ("(S)ERC>GBH") all contracts next bar at PredictedS10 limit;

{get safe}
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 3
then Buytocover ("-ERC.SafeStop.r") From Entry ("(S)ERC>GBH") all contracts next bar at GlobexHigh + 1 stop;
If Currentcontracts < 2
then Buytocover ("-ERC.SafeStop.s") From Entry ("(S)ERC>GBH") all contracts next bar at Bounceline - 1.50 stop;

{stop out}
Buytocover ("-ERC.Stopout.h") From Entry ("(S)ERC>GBH") all contracts Next Bar at ERCEntry.e + 3 stop;                    
End;
{00000000000000========SHORT ERC ENTRY above GlobexHigh======000000000000000}


 
{00000000000000========SHORT ERC ENTRY between GlobexHigh and Bounceline, ERC<GBH  Master======000000000000000}
inputs:
SMyERCGB_1(2),
SMyERCGB_2(13),
MyERCGB_Range (.1);

If S.ERC.below.GBH = 1
And Marketposition = 0
And Time >= 825 
And Time < 1445                                 
And High - Close > 3                              
And Close < S10
And LTopen < S10_30 + 9                         
And Close < GlobexHigh                          
And Close >= Bounceline        
And S10_30 < S10_30[1] +.1                          
And MyMACD < -.1 
And MyMACD_30 < +1  
And AbsValue (Bounceline - Close) > 1                             
And AbsValue (Close - PP) > 2.5
And AbsValue (Close - S1) > 2
//And Highest (Close, 10) - Lowest (Close, 10) > 3   {needs to be optomized} 
//And Lowest(MyMACD,SMyERCGB_1) - Lowest(MyMACD,SMyERCGB_2) < + MyERCGB_Range     {optomized 3.18, made no difference}                    
              
Then begin
Sellshort ("(S)ERC<GBH") 4 contracts next bar at Close + .75 limit;
ERCEntry.f = Close + .75;                 
End;

{scale out}
Buytocover ("-ERC.GBL") From Entry ("(S)ERC<GBH") 1 contracts Next Bar at GlobexLow + .5 limit;
Buytocover ("-ERC.T1") From Entry ("(S)ERC<GBH") 1 contracts Next Bar at DownsideTarget1 + .5 limit;              
Buytocover ("-ERC.T2") From Entry ("(S)ERC<GBH") 1 contracts Next Bar at DownsideTarget2 + .5 limit;
If S1 < Bounceline - 1.5 then Buytocover ("-ERC.S1") From Entry ("(S)ERC<GBH") 1 contracts Next Bar at S1 + .5 limit;                          
If S2 < DownsideTarget1 - 1.5 then Buytocover ("-ERC.S2") From Entry ("(S)ERC<GBH") all contracts Next Bar at S2 + .5 limit;                     
If S3 < DownsideTarget2 - 1.5 then Buytocover ("-ERC.S3") From Entry ("(S)ERC<GBH") all contracts Next Bar at S3 + .5 limit;       

{S10 PreHook}
If Low > S10
And (open [1] < S10[1]  or open[2] < S10[2] or open[3] < S10[3])
and (Close > Open + .75 or time > 1430 or  Close - Low > 1)
then Buytocover ("-ERC.pre-hook") from Entry ("(S)ERC<GBH") all contracts next bar at PredictedS10 limit;

{get safe}          
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 4
And ERCEntry.f - GlobexLow > 2.25 
then Buytocover ("-ERC.SafeStop.t") From Entry ("(S)ERC<GBH") all contracts next bar at ERCEntry.f + .25 stop;               
If Currentcontracts < 4
And Entryprice - GlobexLow <= 2.25 
then Buytocover ("-ERC.SafeStop.u") From Entry ("(S)ERC<GBH") all contracts next bar at ERCEntry.f - (ERCEntry.f - Bounceline +.5) + .25 stop;
If Currentcontracts < 3
then Buytocover ("-ERC.SafeStop.v") From Entry ("(S)ERC<GBH") all contracts next bar at GlobexLow - 2.5 stop;                 
If Currentcontracts < 2 
then Buytocover ("-ERC.SafeStop.w") From Entry ("(S)ERC<GBH") all contracts next bar at DownsideTarget2 + 2 stop;            
End;

{stop out}  
Buytocover ("-ERC.Stop.f") From Entry ("(S)ERC<GBH") all contracts Next Bar at ERCEntry.f + 3 stop;                          
{00000000000000========SHORT ERC ENTRY between GlobexHigh and Bounceline======000000000000000}



{00000000000000========SHORT ERC ENTRY between Bounceline and DownsideTarget2, ERC<BL======000000000000000
If S.ERC.below.BL = 1
And Marketposition = 0
And Time >= 825 
And Time < 1445                                 
And High - Close > 3                                                   
And Close < S10
And Close > S10 - 12
And LTopen < S10_30 + 9                                                
And Close < Bounceline                          
And Close > DownsideTarget2
And AbsValue (Close - PP) > 2.5 
And AbsValue (Low - DownsideTarget1) > 1
//And Highest (Close, 5) - Lowest (Close, 5) > 3                     
And 
	((Fifty_Day_MA_ready = 1 and Close < Fifty_Day_MA_AVG)
	Or
	Fifty_Day_MA_ready = 0)  


              
Then begin
Sellshort ("(S)ERC<BL") 4 contracts next bar at Close + .75 limit;
ERCEntry.x = Close + .75;                 
End;

{scale out}
If ERCEntry.x > GlobexLow + 1.5 then Buytocover ("-ERC.GBL.x") From Entry ("(S)ERC<BL") 1 contracts Next Bar at GlobexLow + .5 limit;                          
If ERCEntry.x > DownsideTarget1 + 1.5 then Buytocover ("-ERC.T1.x") From Entry ("(S)ERC<BL") 2 contracts Next Bar at DownsideTarget1 + .5 limit;            
Buytocover ("-ERC.T2.x") From Entry ("(S)ERC<BL") 1 contracts Next Bar at DownsideTarget2 + .5 limit;
If PP < ERCEntry.x then Buytocover ("-ERC.PP.x") From Entry ("(S)ERC<BL") 1 contracts Next Bar at PP + .5 limit;
If S1 < ERCEntry.x then Buytocover ("-ERC.S1.x") From Entry ("(S)ERC<BL") 1 contracts Next Bar at S1 + .5 limit;                          
If S2 < ERCEntry.x - 1.5 then Buytocover ("-ERC.S2.x") From Entry ("(S)ERC<BL") all contracts Next Bar at S2 + .5 limit;                     
If S3 < ERCEntry.x - 1.5 then Buytocover ("-ERC.S3.x") From Entry ("(S)ERC<BL") all contracts Next Bar at S3 + .5 limit;       

{S10 PreHook}
If Low > S10
And (open [1] < S10[1]  or open[2] < S10[2] or open[3] < S10[3])
and (Close > Open + .75 or time > 1430 or  Close - Low > 1)
then Buytocover ("-ERC.pre-hook.x") from Entry ("(S)ERC<BL") all contracts next bar at PredictedS10 limit;

{get safe}          
If Currentcontracts <> 0
Then Begin
	
	If Currentcontracts < 4
	And Close < ERCEntry.x - 2 
	then Buytocover ("-ERC.SafeStop.x") From Entry ("(S)ERC<BL") all contracts next bar at ERCEntry.x - .25 stop;               
		
	If Currentcontracts < 3
	And Close < ERCEntry.x - 2
	And Close < GlobexLow - .5
	then Buytocover ("-ERC.SafeStop.z") From Entry ("(S)ERC<BL") all contracts next bar at GlobexLow stop;                 
	
	If Currentcontracts < 2 
	then Buytocover ("-ERC.SafeStop.zz") From Entry ("(S)ERC<BL") all contracts next bar at DownsideTarget2 + 2 stop;            
End;
} 

{stop out}  
//Buytocover ("-ERC.Stop.x") From Entry ("(S)ERC<BL") all contracts Next Bar at ERCEntry.x + 3 stop;
                         
{00000000000000========SHORT ERC ENTRY between Bounceline and DownsideTarget2, ERC<BL======000000000000000}






{============================== SHORT ERC ENTRIES below Downside Target 2 Master=================================}
If S.ERC.below.T2 = 1
And Marketposition = 0
And Time >= 825 
And Time < 1445                                                    
And High - Close >= 2.5
And Close - Low < 2
And Bounceline - GlobexLow > 4.5
And Close < S10
And Close < DownsideTarget2
And LTopen < S10_30 + 1                
And S10_30 < S10_30[1] + 1           
And S10 < S10[1] +.1  
And DownsideTarget2 - Close > .5
And Highest (Close, 10) - Lowest (Close, 10) > 5 
And Lowest(MyMACD, 1) - Lowest(MyMACD, 7) < + .3     {needs to be optomized}                      

Then begin
Sellshort ("(S)ERC<T2") 4 contracts next bar at Close + .25 limit;
ERCEntry.z=Close + .75;
End;

{scale out}
Buytocover ("-ERC<T2.3pointer") From Entry ("(S)ERC<T2") 1 contracts Next Bar at ERCEntry.z - 3 limit;
Buytocover ("-ERC<T2.7pointer") From Entry ("(S)ERC<T2") 1 contracts Next Bar at ERCEntry.z - 7 limit;             
Buytocover ("-ERC<T2.14pointers") From Entry ("(S)ERC<T2") 2 contracts Next Bar at ERCEntry.z - 14 limit;    
If S1 < ERCEntry.z - 1.5 then Buytocover ("-ERC<T2.S1") From Entry ("(S)ERC<T2") 1 contracts Next Bar at S1 + .75 limit;      
If S2 < ERCEntry.z - 1.5 then Buytocover ("-ERC<T2.S2") From Entry ("(S)ERC<T2") 1 contracts Next Bar at S2 + .75 limit;
If S3 < ERCEntry.z - 1.5 then Buytocover ("-ERC<T2.S3") From Entry ("(S)ERC<T2") 1 contracts Next Bar at S3 + .75 limit;

{get safe } 
If Currentcontracts <> 0
Then Begin
If Currentcontracts < 4
And S10 > S19
then Buytocover ("-ERC<T2.safe.a") From Entry ("(S)ERC<T2") all contracts next bar at S10_30 + .75 stop;

If Currentcontracts < 4
And Close - Open > 6
And Close > S10
then Buytocover ("-ERC<T2.safe.b") From Entry ("(S)ERC<T2") all contracts next bar at EntryPrice stop;

End; 
{==================== END SHORT ERC ENTRIES below Downside Target 2==========================}



Setstoploss (1200);        

If Time > 1455 then begin           
Sell ("+L.Time") all contracts next bar at market;
Buytocover ("-S.Time") all contracts next bar at market;
end;