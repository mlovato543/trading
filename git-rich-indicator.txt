{----------BEGIN STOCASTICS----------t6estr}
Inputs:
 PriceH( High), 
 PriceL( Low),
 PriceC( Close),
 StochLength( 5),
 SmoothingLength1( 2),
 SmoothingLength2( 3),
 SmoothingType( 1),
 OverSold( 20),
 OverBought( 80) ;

variables:
 oFastK( 0 ),
 oFastD( 0 ),
 oSlowK( 0 ),
 oSlowD( 0 ) ;

Value1 = Stochastic( PriceH, PriceL, PriceC, StochLength, SmoothingLength1,
 SmoothingLength2, SmoothingType, oFastK, oFastD, oSlowK, oSlowD ) ;

{----------END STOCHASTICS----------test}




{----------BEGIN MACD----------}

Inputs:
 int FastLength( 72 ),
 int SlowLength( 83 ),
 int MACDLength( 8 ),
 int MACDDiff_Up_Color( Green ),
 int MACDDiff_Down_Color( Red ),
 int BackgroundColorAlertCell( DarkGray ) ;

variables:
 intrabarpersist bool PlotCrossBarsAgo( false ),
 double MyMACD( 0 ),
 double MACDAvg( 0 ),
 double MACDDiff( 0 ),
 double HistogramColor( 0 ),
 int CrossBarsAgo( 0 ) ;

once
 PlotCrossBarsAgo = GetAppInfo( aiApplicationType ) <> cChart ;
 
MyMACD = MACD( Close, FastLength, SlowLength ) ;
MACDAvg = XAverage( MyMACD, MACDLength ) ;
MACDDiff = MyMACD - MACDAvg ;
HistogramColor = iff( MACDDiff > 0, MACDDiff_Up_Color, MACDDiff_Down_Color ) ;

if ( MACDDiff > 0 and MACDDiff[1] <= 0 ) or ( MACDDiff < 0 and MACDDiff[1] >= 0 )
 then
 CrossBarsAgo = 0
else
 CrossBarsAgo += 1 ;

{----------END MACD----------}




{----------BEGIN FLOOR TRADER PIVOT POINTS----------}

inputs:
 int UseSessionOrDateChange_0_or_1( 0 ),
 int Plot_5or7( 5 ) ;

variables:
 int CurrSess( 0 ),
 bool CalcTrigger( false ),
 double S1( 0 ),
 double S2( 0 ),
 double S3( 0 ),
 double R1( 0 ),
 double R2( 0 ),
 double R3( 0 ),
 double PP( 0 ),
 double TodaysHigh( 0 ),
 double YestHigh( 0 ),
 double TodaysLow( 0 ),
 double YestLow( 0 ),
 double TodaysClose( 0 ),
 double YestClose( 0 ),
 int Counter( 0 ) ;
CurrSess = CurrentSession( 0 ) ;
if UseSessionOrDateChange_0_or_1 = 0 then
CalcTrigger = CurrSess <> CurrSess[1]
else
CalcTrigger = Date <> Date[1] ;
if CalcTrigger then
begin
{ increment Counter to be sure enough data is processed - see comment below }
 if CurrentBar > 1 then
  Counter = Counter + 1 ;
 YestHigh = TodaysHigh ;
 YestLow = TodaysLow ;
 YestClose = Close[1] ;
 TodaysHigh = High ;
    TodaysLow = Low ;
 PP = ( YestHigh + YestLow + YestClose ) / 3 ;
 R1 = Round2Fraction(PP * 2 - YestLow) ;
 R2 = Round2Fraction(PP + YestHigh - YestLow) ;
 R3 = Round2Fraction(R2 + YestHigh - YestLow) ;
 S1 = Round2Fraction(PP * 2 - YestHigh) ;
 S2 = Round2Fraction(PP - YestHigh + YestLow) ;
 S3 = Round2Fraction(S2 - YestHigh + YestLow) ;
 PP = Round2Fraction( (YestHigh + YestLow + YestClose ) / 3) ;
   SetPlotColor[1]( 1, Transparent ) ;
    SetPlotColor[1]( 2, Transparent ) ;
    SetPlotColor[1]( 3, Transparent ) ;
    SetPlotColor[1]( 4, Transparent ) ;
    SetPlotColor[1]( 5, Transparent ) ;
    SetPlotColor[1]( 6, Transparent ) ;
    SetPlotColor[1]( 7, Transparent ) ;
 end
else
 begin
 if High > TodaysHigh then
  TodaysHigh = High ;
 if Low < TodaysLow then
  TodaysLow = Low ;
 end ;
{----------END FLOOR TRADER PIVOT POINTS----------}




{----------BEGIN JOHN EMINI LINES----------}

Variables:
ChartTimeFrame (1);

Variables:
GlobexOpen (100),
GlobexClose (809),
MarketClose (1600),
GlobexHigh (0),
GlobexLow (0),
GlobexRange (0),
RangeSet (0),
S10 (0),
S19 (0),
S10_30(0),
S19_30 (0),
Bounceline (0),
UpsideTarget1 (0),
UpsideTarget2 (0),
DownsideTarget1 (0),
DownsideTarget2 (0),
Trend (0);

If Barinterval = 5 then S10 = Average (Close,10);
If Barinterval = 2 then s10 = Average (Close,25);

If Barinterval = 5 then S19 = Average (Close,19);
If Barinterval = 2 then s19 = Average (Close,48);

If Time = GlobexOpen then begin
 GlobexHigh=high;
 GlobexLow=low;
end;

If Date > Date[1] then begin
 GlobexHigh = 0;
 GlobexLow = 0;
end;

If Time >= GlobexOpen + ChartTimeFrame and (GlobexHigh=0 or GlobexLow=0) then begin
 GlobexHigh=High; 
 GlobexLow=Low;
end;


If time > GlobexOpen and time <= GlobexClose then begin
 If High > GlobexHigh then GlobexHigh = High;
 If Low < GlobexLow then GlobexLow = Low;
 GlobexRange = GlobexHigh - GlobexLow;
 Bounceline = Round2Fraction(GlobexRange/2 + GlobexLow);
 UpsideTarget1 = Round2Fraction(GlobexLow + GlobexRange*1.34);
 UpsideTarget2 = Round2Fraction(GlobexLow + GlobexRange*1.618);
 DownsideTarget1 = Round2Fraction(GlobexHigh - GlobexRange*1.34);
 DownsideTarget2 = Round2Fraction(GlobexHigh - GlobexRange*1.618);
End;


If time >= GlobexOpen and time <= MarketClose then
 RangeSet = 1
Else Begin
 RangeSet = 0;
End;
{----------END JOHN EMINI LINES----------}



{------------------------------------------------------------------}
{------------------------END INDICATOR-----------------------------}













{------------------------------------------------------------------}
{-------------------------BEGIN PLOT-------------------------------}


{----------BEGIN PLOT TREND----------
If Trend = 1 and Trend[1] <>1
then
Value80 = Text_SetColor(Text_new(D,T,High + .5, "Up Bias"),yellow);
If Trend = -1 and Trend[1] <>-1
then
Value81 = Text_SetColor(Text_new(D,T,Low - .5, "Down Bias"),yellow);
If Trend = 1 and Trend[1] <>1
then
Value80 = Text_SetColor(Text_new(D,T,High + .5, "Up Bias"),yellow);
If Trend = -1 and Trend[1] <>-1
then
Value81 = Text_SetColor(Text_new(D,T,Low - .5, "Down Bias"),yellow);
}
{----------END PLOT TREND----------}




{----------BEGIN PLOT PIVOT POINTS----------}
if Counter >= 2 and ( BarType < 3 or BarType = 14 ) and time < 1600 then { if at least one full
 day's data has been processed and chart bar interval is daily, intra-day, second
 or tick bar then plot }
 begin
 if Plot_5or7 = 7 then
  Plot10( R3, "R3" ) ;
 Plot11( R2, "R2" ) ;
 Plot12( R1, "R1" ) ;
 Plot13( PP, "PP" ) ;
 Plot14( S1, "S1" ) ;
 Plot15( S2, "S2" ) ;
 if Plot_5or7 = 7 then
   Plot16( S3, "S3" ) ;
 end
else if BarType >= 3 and BarType <> 14 then
 RaiseRuntimeError( "Floor Trader Pivots can be applied only to daily, " +
  "intraday, second, tick or volume bars." )
else if LastBarOnChartEx and Counter < 2 then
 RaiseRuntimeError( "Not enough data to calculate.  Try loading more " +
  "historical data or increasing 'load additional bars' setting so that a " +
  "minimum of 2 full days of data are available." ) ;
{----------END PLOT PIVOT POINTS----------}

{----------END PLOT MOVING AVERAGES----------}
Plot8 (S10, "S10");
Plot9 (S19, "S19");
S10_30 = Average (Close,10*6);
Plot17 (S10_30, "S10_30");
{----------END PLOT MOVING AVERAGES----------}


{----------BEGIN PLOT JOHN EMINI LINES----------}
If RangeSet[1]=1 and time < MarketClose + ChartTimeFrame then begin
 Plot1 (GlobexHigh,"Globex High");
 Plot2 (GlobexLow, "Globex Low");
 Plot3 (Bounceline, "Bounce Line");
 Plot4 (UpsideTarget1, "Upside T1");
 Plot5 (UpsideTarget2, "Upside T2");
 Plot6 (DownsideTarget1, "Downside T1");
 Plot7 (DownsideTarget2, "Downside T2");
end;
{----------END PLOT JOHN EMINI LINES----------}











{----------BEGIN CALCULATE STATISTICS----------}
Array:  GB_Range[] (0);
Array_SetMaxIndex(GB_Range, 31) ;

variables:
Count (0),
Count_loop (0)
;

//Populate Array for first 30 days
If Time = 825
And Count < 30
then
Begin
    Count = Count +1;
	GB_Range[Count] = GlobexHigh - GlobexLow;
End;

//Update Array each day after first 30 days
If Time = 825
And Count[1] = 30 
then
Begin
	Count_loop = 0;
	While Count_loop < 30 
	begin
		Count_loop = Count_loop +1;
		GB_Range[Count_loop] = GB_Range[Count_loop+1];
	End;
	GB_Range[30] = GlobexHigh - GlobexLow;	
	
	
End;

{---------- END  CALCULATE STATISTICS----------}






{----------BEGIN PLOT STATISTICS----------}

Inputs:
Display_Stats (1);

Variables:
GB_Range_SUM_30 (0),
GB_Range_SUM_25 (0),
GB_Range_SUM_20 (0),
GB_Range_SUM_15 (0),
GB_Range_SUM_10 (0),
GB_Range_SUM_5 (0),
GB_Range_AVG_30 (""),
GB_Range_AVG_25 (""),
GB_Range_AVG_20 (""),
GB_Range_AVG_15 (""),
GB_Range_AVG_10 (""),
GB_Range_AVG_5 ("")
;

If Count = 30 then begin
GB_Range_SUM_30 = Array_Sum(GB_Range, Count - 29, Count);
GB_Range_AVG_30 = numtostr(GB_Range_SUM_30/30,2);
end;

If Count > 24 then begin
GB_Range_SUM_25 = Array_Sum(GB_Range, Count - 24 , Count);
GB_Range_AVG_25 = numtostr(GB_Range_SUM_25/25,2);
end;

If Count > 19 then begin
GB_Range_SUM_20 = Array_Sum(GB_Range, Count - 19, Count);
GB_Range_AVG_20 = numtostr(GB_Range_SUM_20/20,2);
end;

If Count > 14 then begin
GB_Range_SUM_15 = Array_Sum(GB_Range, Count - 14, Count);
GB_Range_AVG_15 = numtostr(GB_Range_SUM_15/15,2);
end;

If Count > 9 then begin
GB_Range_SUM_10 = Array_Sum(GB_Range, Count -9 , Count);
GB_Range_AVG_10 = numtostr(GB_Range_SUM_10/10,2);
end;

If Count > 4 then begin
GB_Range_SUM_5 = Array_Sum(GB_Range, Count - 4, Count);
GB_Range_AVG_5 = numtostr(GB_Range_SUM_5/5,2);
end;

If Time = 825
And Display_Stats = 1
then
Begin
Value79 = Text_SetColor(Text_new(D,T,R2 + 7,"Today's Globex Range: " + numtostr(GB_Range[Count],2) ),yellow);
If Count > 4 then Value85 = Text_SetColor(Text_new(D,T,R2 + 6,"5-day avg GB Range: " + GB_Range_AVG_5 ),yellow);
If Count > 9 then Value84 = Text_SetColor(Text_new(D,T,R2 + 5,"10-day avg GB Range: " + GB_Range_AVG_10 ),yellow);
If Count > 14 then Value83 = Text_SetColor(Text_new(D,T,R2 + 4,"15-day avg GB Range: " + GB_Range_AVG_15 ),yellow);
If Count > 19 then Value82 = Text_SetColor(Text_new(D,T,R2 + 3,"20-day avg GB Range: " + GB_Range_AVG_20 ),yellow);
If Count > 24 then Value81 = Text_SetColor(Text_new(D,T,R2 + 2,"25-day avg GB Range: " + GB_Range_AVG_25 ),yellow);
If Count = 30 then Value80 = Text_SetColor(Text_new(D,T,R2 + 1,"30-day avg GB Range: " + GB_Range_AVG_30 ),yellow);

End;

{---------- END  PLOT STATISTICS----------}


{-------------------------END PLOT-------------------------------}
{----------------------------------------------------------------}